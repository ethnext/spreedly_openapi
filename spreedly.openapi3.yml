openapi: 3.0.0
info:
  title: Spreedly API
  description: Spreedly API
  version: v1
servers:
  - url: https://core.spreedly.com/v1
    description: Spreedly API
tags:
- name: gateways
  description: Gateways
- name: receivers
  description: Payment Method Receivers
- name: payment_methods
  description: Payment Methods
- name: certificates
  description: Certificates
- name: transactions
  description: Transactions
security:
- http_basic: []

paths:
  /gateways_options.json:
    get:
      operationId: gateways_options.list
      summary: List supported gateways
      description: |
        Retrieve a list of all gateways, and their properties, supported by Spreedly. This call can be used to dynamically present a gateway credential form to users or to do any sort of dynamic rendering.

        Note that this request is publicly available and _does not_ require authorization.
      tags: [gateways]
      security: []
      responses:
        '200':
          description: List of supported gateways
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateways:
                    type: array
                    items:
                      type: object
                      properties:
                        gateway_type:
                          description: The type (short name) of the gateway. Use this value when provisioning a gateway.
                          type: string
                        name:
                          description: The human readable name of the gateway
                          type: string
                        auth_modes:
                          description: A list of authorization modes for the gateway. An auth mode is basically a list of credentials required for this gateway (some gateways support various ways of entering credentials).
                          type: array
                          items:
                            type: object
                            properties:
                              auth_mode_type:
                                type: string
                              name:
                                type: string
                              credentials:
                                type: object
                                properties:
                                  name:
                                    type: string
                                  label:
                                    type: string
                                  safe:
                                    type: boolean
                                  large:
                                    type: boolean
                        characteristics:
                          description: A list of operations (such as purchase, capture etc…) that the gateway supports
                          type: array
                          items:
                            type: string
                        payment_methods:
                          description: A list of payment methods (such as credit_card, apple_pay, google_pay, etc…) that the gateway supports
                          type: array
                          items:
                            type: string
                        gateway_specific_fields:
                          description: The list of gateway specific fields that can be specified in supported gateway transactions
                          type: array
                          items:
                            type: string
                        supported_countries:
                          description: The list of countries this gateway supports
                          type: array
                          items:
                            type: string
                        supported_cardtypes:
                          description: The list of credit card brands this gateway supports
                          type: array
                          items:
                            type: string
                        regions:
                          description: The list of geographic regions this gateway supports (determined by the supported_countries)
                          type: array
                          items:
                            type: string
                        homepage:
                          type: string
                        company_name:
                          type: string
  /gateways.json:
    get:
      operationId: gateways.list
      summary: List created gateways
      description: Retrieve an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of all gateways in the environment. This is different from the list of all supported gateways in that this will only return the gateway instances that have been provisioned in the authenticated environment.
      tags: [gateways]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
      responses:
        '200':
          description: List of created gateways
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateways:
                    type: array
                    items:
                      $ref: '#/components/schemas/gateway'
    post:
      operationId: gateways.create
      summary: Create gateway
      description: Create (provision) a gateway to process card data in the authenticated environment. A test gateway is used to [test your integration](https://docs.spreedly.com/guides/testing/) to Spreedly and can only be used with [test payment methods](https://docs.spreedly.com/reference/test-data/). Production gateways process real card data and transactions. Production gateways are created using the credentials required for that gateway, meaning each call is slightly different depending on the gateway’s API requirements.
      tags: [gateways]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_update_request'
      responses:
        '201':
          description: Created gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateway:
                    $ref: '#/components/schemas/gateway'
  /gateways/{gateway_token}.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    get:
      operationId: gateways.show
      summary: Show gateway
      description: Get a gateway with the given token.
      tags: [gateways]
      responses:
        '200':
          description: Gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateway:
                    $ref: '#/components/schemas/gateway'
    put:
      operationId: gateways.update
      summary: Update a gateway
      description: Updating a redacted gateway’s credentials will set its state back to retained, allowing it to be used for transactions.
      tags: [gateways]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/gateway_update_request'
      responses:
        '201':
          description: Updated gateway
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateway:
                    $ref: '#/components/schemas/gateway'
  /gateways/{gateway_token}/retain.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    put:
      operationId: gateways.retain
      summary: Retain
      description: When gateways are created via the API, they are automatically retained. However, gateways created via the unauthenticated API (e.g., from a browser/javascript library) are created in the “cached” state. Only by retaining a cached gateway will it be saved and available for future use.
      tags: [gateways]
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /gateways/{gateway_token}/redact.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    put:
      operationId: gateways.redact
      summary: Redact
      description: Redact (strip of any sensitive credentials and make inactive) a provisioned gateway.
      tags: [gateways]
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /gateways/{gateway_token}/transactions.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    get:
      operationId: gateways.list_transactions
      summary: Transactions
      description: Get an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of transactions executed against a specific gateway.
      tags: [gateways, transactions]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
        - name: state
          description: The transaction state on which to filter the returned list. Can be one of `succeeded`, `failed`, `gateway_processing_failed`, `gateway_processing_result_unknown`.
          in: query
          schema:
            type: string
            enum:
              - succeeded
              - failed
              - gateway_processing_failed
              - gateway_processing_result_unknown
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/transaction'
  /receivers_options.json:
    get:
      operationId: receivers_options.list
      summary: List supported receivers
      description: |
        Retrieve a list of all payment method distribution receivers, and their properties, supported by Spreedly.

        Note that this request is publicly available and _does not_ require authorization.
      tags: [receivers]
      security: []
      responses:
        '200':
          description: List of supported receivers
          content:
            application/json:
              schema:
                type: object
                properties:
                  receivers:
                    type: array
                    items:
                      $ref: '#/components/schemas/receiver_option'
  /receivers.json:
    get:
      operationId: receivers.list
      summary: List created receivers
      description: Retrieve an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of all receivers in the authenticated environment.
      tags: [receivers]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
      responses:
        '200':
          description: List of created receivers
          content:
            application/json:
              schema:
                type: object
                properties:
                  receivers:
                    type: array
                    items:
                      $ref: '#/components/schemas/receiver'
    post:
      operationId: receivers.create
      summary: Create receiver
      description: Create a receiver for use in [payment method distribution](https://docs.spreedly.com/guides/payment-method-distribution/).
      tags: [receivers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/receiver_create_request'
      responses:
        '201':
          description: Created receiver
          content:
            application/json:
              schema:
                type: object
                properties:
                  gateway:
                    $ref: '#/components/schemas/receiver'
  /receivers/{receiver_token}.json:
    parameters:
      - $ref: '#/components/parameters/receiver_token'
    get:
      operationId: receivers.show
      summary: Show receiver
      description: Get a receiver with the given token.
      tags: [receivers]
      responses:
        '200':
          description: Receiver
          content:
            application/json:
              schema:
                type: object
                properties:
                  receiver:
                    $ref: '#/components/schemas/receiver'
    put:
      operationId: receivers.update
      summary: Update receiver
      description: Update a receiver with new credentials.
      tags: [receivers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                receiver:
                  type: object
                  properties:
                    credentials:
                      $ref: '#/components/schemas/receiver_credentials'
                  required:
                    - credentials
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /receivers/{receiver_token}/redact.json:
    parameters:
      - $ref: '#/components/parameters/receiver_token'
    put:
      operationId: receivers.redact
      summary: Redact receiver
      description: Redact (strip of any sensitive credentials and make inactive) a receiver.
      tags: [receivers]
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /payment_methods.json:
    post:
      operationId: payment_methods.create
      summary: Create payment method
      description: |
        Add a credit card, bank account/ACH, Android Pay, Google Pay, Apple Pay, or third party token payment method to the authenticated environment’s vault.

        To create a credit card for testing, use one of the [test credit card numbers](https://docs.spreedly.com/reference/test-data/#credit-cards).

        To create a bank account for testing, use one of the [test bank account numbers](https://docs.spreedly.com/reference/test-data/#bank-accounts).

        To create a test Android Pay, Google Pay, or Apple Pay payment method, set the `test_card_number` element to one of the known [test credit card numbers](https://docs.spreedly.com/reference/test-data/#credit-cards).

        Third party tokens are payment methods stored in the Spreedly vault, that are a reference to another payment method stored at the gateway’s vault. For more information about third party tokens, please see [this guide](https://docs.spreedly.com/guides/third-party-vaulting/).

        For more information about testing on Spreedly, please see [this guide](https://docs.spreedly.com/guides/testing/).
      tags: [payment_methods]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: object
                  properties:
                    credit_card:
                      $ref: '#/components/schemas/pass_in_credit_card'
                    bank_account:
                      $ref: '#/components/schemas/pass_in_bank_account'
                    android_pay:
                      $ref: '#/components/schemas/pass_in_android_pay'
                    google_pay:
                      $ref: '#/components/schemas/pass_in_google_pay'
                    apple_pay:
                      $ref: '#/components/schemas/pass_in_apple_pay'
                    payment_method_type:
                      description: "`third_party_token` to represent an externally vaulted payment method reference."
                      example: third_party_token
                    reference:
                      description: The token identifying the payment method at the external gateway
                      example: "MF424cE3jPVESunRNZW0oFtmyI4"
                    gateway_type:
                      description: The type of the external gateway
                      example: "litle"
                    retained:
                      description: "`true` if this payment method should be automatically retained on creation"
                    email:
                      description: The email address of the customer associated with this payment method
                      example: joey@example.com
                    first_name:
                      description: The first name of the cardholder
                      type: string
                    last_name:
                      description: The last name of the cardholder
                      type: string
                    address_1:
                      description: Cardholder’s address, line 1
                      type: string
                    address_2:
                      description: Cardholder’s address, line 2
                      type: string
                    city:
                      description: Cardholder’s city
                      type: string
                    state:
                      description: Cardholder’s state
                      type: string
                    zip:
                      description: Cardholder’s zip
                      type: string
                    country:
                      description: Cardholder’s country
                      type: string
                    allow_blank_name:
                      description: "`true` if this payment method should skip the name validation requirement"
                      type: boolean
                    allow_expired_date:
                      description: "`true` if this payment method should skip the expired date validation requirement"
                      type: boolean
                    allow_blank_date:
                      description: "`true` if this payment method should skip the expiration date validation requirement"
                      type: boolean
                    eligible_for_card_updater:
                      description: "`true` if this payment method should be included in Account Updater"
                      type: boolean
                    metadata:
                      description: metadata key-value pairs (limit 25). Keys are limited to 50 characters. Values are limited to 500 characters and cannot contain compounding data types
                      type: object
                      additionalProperties: {}
                      example:
                        "key": "string value"
                        "another_key": 123
                        "final_key": true
                    data:
                      example:
                        "my_payment_method_identifier": 448
                        "extra_stuff":
                          "some_other_things": "Can be anything really"
      responses:
        '201':
          $ref: '#/components/responses/transaction'
    get:
      operationId: payment_methods.list
      summary: List
      description: Retrieve an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of all retained payment methods in the authenticated environment.
      tags: [payment_methods]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
        - name: metadata
          description: A metadata key/value pair represented as a hash (e.g. `metadata[key]=value`).
          in: query
          schema: {}
          # TODO specify serialization
        - name: count
          description: The number of payment methods to return. By default returns 20, maximum allowed is 100.
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: List of payment methods
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_methods:
                    type: array
                    items:
                      $ref: '#/components/schemas/payment_method'
  /payment_methods/{payment_method_token}.json:
    parameters:
      - $ref: '#/components/parameters/payment_method_token'
    get:
      operationId: payment_methods.show
      summary: Show payment method
      description: Get a payment method with the given token.
      tags: [payment_methods]
      responses:
        '200':
          description: Payment method
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_method:
                    $ref: '#/components/schemas/payment_method'
    put:
      operationId: payment_methods.update
      summary: Update payment method
      description: Update a payment method’s non-sensitive attributes.
      tags: [payment_methods]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: object
                  properties:
                    allow_blank_name:
                      description: "`true` if this payment method should skip the name validation requirement (credit card only)"
                      type: boolean
                    allow_expired_date:
                      description: "`true` if this payment method should skip the expired date validation requirement (credit card only)"
                      type: boolean
                    allow_blank_date:
                      description: "`true` if this payment method should skip the expiration date validation requirement"
                      type: boolean
                    eligible_for_card_updater:
                      description: "`true` if this payment method should be included in Account Updater"
                      type: boolean
                    metadata:
                      description: "metadata key-value pairs (limit 25). Keys are limited to 50 characters. Values are limited to 500 characters and cannot contain compounding data types"
                      type: object
                  additionalProperties:
                    description: One or more non-sensitive attributes to update. Non-sensitive attributes are attributes excluding card numbers, verification values (CVV), bank account numbers etc…
      responses:
        '200':
          description: Payment method
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_method:
                    $ref: '#/components/schemas/payment_method'
  /payment_methods/{payment_method_token}/metadata.json:
    parameters:
      - $ref: '#/components/parameters/payment_method_token'
    delete:
      operationId: payment_methods.delete_metadata
      summary: Delete metadata
      description: Remove key value pairs from a payment method’s metadata.
      tags: [payment_methods]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keys:
                  description: An array of metadata key whose key/value pairs will be deleted. If a metadata key does not already exist, it will be ignored.
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Payment method
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_method:
                    $ref: '#/components/schemas/payment_method'
  /payment_methods/{payment_method_token}/retain.json:
    parameters:
      - $ref: '#/components/parameters/payment_method_token'
    put:
      operationId: payment_methods.retain
      summary: Retain payment method
      description: Retain (keep *in the Spreedly vault* for future use) a payment method.
      tags: [payment_methods]
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /gateways/{gateway_token}/store.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    put:
      operationId: gateways.store
      summary: Store payment method
      description: |
        Tokenize a payment method *at the gateway*.

        This transaction copies the payment method information from the Spreedly vault [to the gateway’s vault](https://docs.spreedly.com/guides/third-party-vaulting/) and creates a new Spreedly payment method to represent the gateway’s version. The reference to the payment method at the gateway is called a `ThirdPartyToken` and is a separate payment method from the original payment method. It is up to you to manage the lifecycle of these linked payment methods – Spreedly does not keep them in sync in any way.

        The `ThirdPartyToken` is locked to the gateway where the card is stored; it cannot be used at another gateway. If you’d like a card to be used at multiple gateways, you’ll need to [retain the card in the Spreedly vault](https://docs.spreedly.com/basics/purchase/#retain).
      tags: [payment_methods, gateways]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: object
                  required:
                    - payment_method_token
                  properties:
                    payment_method_token:
                      description: The token of the payment method to copy to the gateway
                    currency_code:
                      description: The currency of the funds, as [ISO 4217 alpha currency codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes), e.g., `USD` for US dollars. Some gateways may need this for a store call but most do not.
      responses:
        '201':
          $ref: '#/components/responses/transaction'
  /payment_methods/{payment_method_token}/redact.json:
    parameters:
      - $ref: '#/components/parameters/payment_method_token'
    put:
      operationId: payment_methods.redact
      summary: Redact payment method
      description: Redact (strip of any sensitive credentials and make inactive) a payment method.
      tags: [payment_methods]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: object
                  properties:
                    remove_from_gateway:
                      description: If the payment method is also stored at the gateway (e.g., for [third party vaulting](https://docs.spreedly.com/guides/third-party-vaulting) or [offsite authorizations](https://docs.spreedly.com/guides/offsite-payments#recurring-charges)), include the token of the gateway here and it will be removed from the gateway as well as being redacted from Spreedly. This element is optional and, if not needed, the request body can be empty.
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /payment_methods/{payment_method_token}/recache.json:
    parameters:
      - $ref: '#/components/parameters/payment_method_token'
    post:
      operationId: payment_methods.recache
      summary: Recache
      description: Update a credit card’s verification value (CVV) so the card can be transacted against.
      tags: [payment_methods]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: object
                  properties:
                    credit_card:
                      type: object
                      properties:
                        verification_value:
                          description: The verification value (CVV/CVC) of the card
      responses:
        '201':
          $ref: '#/components/responses/transaction'
  /payment_methods/{payment_method_token}/transactions.json:
    parameters:
      - $ref: '#/components/parameters/payment_method_token'
    get:
      operationId: payment_methods.list_transactions
      summary: Transactions
      description: Get an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of transactions executed against a specific payment method.
      tags: [payment_methods, transactions]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
      responses:
        '200':
          description: Transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/transaction'
  /certificates.json:
    get:
      operationId: certificates.list
      summary: List certificates
      description: Retrieve an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of all certificates in the authenticated environment.
      tags: [certificates]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
      responses:
        '200':
          description: List of certificates
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificates:
                    type: array
                    items:
                      $ref: '#/components/schemas/certificate'
    post:
      operationId: certificates.create
      summary: Create certificate
      description: |
        Create a new SSL keypair and certificate signing request (CSR).

        Since Spreedly is not a certificate authority we cannot issue trusted certificates. Instead, it is intended that you will get the certificate signed by your certificate authority (or sign it yourself) and update the certificate record at Spreedly with the final and signed cert.
      tags: [certificates]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: object
                  required:
                    - algorithm
                    - cn
                  properties:
                    algorithm:
                      description: The encryption algorithm to use when creating the key pair. Currently, the only supported option is `ec-prime256v1` representing the X9.62/SECG curve over a 256 bit prime field.
                    cn:
                      description: The certificate common name
                    o:
                      description: The organization
                    ou:
                      description: The organization unit
                    c:
                      description: The country
                    st:
                      description: The state
                    l:
                      description: The locality or city
                    email_address:
                      description: The email address
      responses:
        '201':
          description: Created Certificate
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificate:
                    $ref: '#/components/schemas/certificate'
  /certificates/{certificate_token}.json:
    parameters:
      - $ref: '#/components/parameters/certificate_token'
    put:
      operationId: certificates.update
      summary: Update certificate
      description: Update an existing SSL certificate record with the signed certificate value (in PEM format).
      tags: [certificates]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: object
                  required:
                    - pem
                  properties:
                    pem:
                      description: The signed certificate in PEM format. Spreedly is not a certificate authority and, thusly, will not sign the certificate for you. It is your responsibility to take the CSR to your certificate authority, and then update the certificate record with the signed cert in PEM format.
      responses:
        '201':
          description: Updated Certificate
          content:
            application/json:
              schema:
                type: object
                properties:
                  certificate:
                    $ref: '#/components/schemas/certificate'
  /transactions.json:
    get:
      operationId: transactions.list
      summary: List transactions
      description: |
        Retrieve an [ordered and paginated](https://docs.spreedly.com/reference/api/v1/?json#order-and-pagination) list of all transactions in the authenticated environment.

        Note: This endpoint is rate-limited to 30 requests per minute, per environment.
      tags: [transactions]
      parameters:
        - $ref: '#/components/parameters/order'
        - $ref: '#/components/parameters/since_token'
        - name: state
          description: The transaction state on which to filter the returned list. Can be one of `succeeded`, `failed`, `gateway_processing_failed`, `gateway_processing_result_unknown`.
          in: query
          schema:
            enum:
              - succeeded
              - failed
              - gateway_processing_failed
              - gateway_processing_result_unknown
        - name: count
          description: The number of transactions to return. By default returns 20, maximum allowed is 100.
          in: query
          schema:
            type: integer
            default: 20
            maximum: 100
      responses:
        '200':
          description: List of transactions
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/transaction'
  /transactions/{transaction_token}.json:
    parameters:
      - $ref: '#/components/parameters/transaction_token'
    get:
      operationId: transactions.show
      summary: Show transaction
      description: Get the transaction with the given token.
      tags: [transactions]
      responses:
        '200':
          description: Transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  payment_method:
                    $ref: '#/components/schemas/transaction'
  /transactions/{transaction_token}/transcript:
    parameters:
      - $ref: '#/components/parameters/transaction_token'
    get:
      operationId: transactions.transcript
      summary: Transcript
      description: |
        View the exchange between Spreedly and the external service (gateway, receiver, etc…) for the given transaction in a human-readable, text format. The transcript is scrubbed of sensitive information so you can email it to external support representatives to help in debugging and other support tasks.

        Note:  A transcript is not meant to be machine parseable and, as such, its format may change at any time without warning.
      tags: [transactions]
      responses:
        '200':
          description: Text formatted representation of the communication between Spreedly and the external service.
          content: {}

  /gateways/{gateway_token}/purchase.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    post:
      operationId: gateways.purchase
      summary: Purchase
      description: |
        Charge a payment method a specific amount at the target gateway.


        Tokenized payment method: Charge a _tokenized_ payment method (already stored in the Spreedly environment) the specified amount. The payment method can be of any type (credit card, bank account, Apple Pay, etc…), as long as it exists in the specified environment.

        The `payment_method_token` field of the transaction request is required.


        Pass-in credit card: Pass a credit card payment method directly in to the purchase request. If the card is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `credit_card` field of the transaction request is required.


        Pass-in bank account/eCheck: Pass a bank account/eCheck payment method directly in to the purchase request. If the bank account is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `bank_account` field of the transaction request is required.


        Pass-in Android Pay: Pass an Android Pay payment method directly in to the purchase request. If the Android Pay data is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `android_pay` field of the transaction request is required.


        Pass-in Google Pay: Pass a Google Pay payment method directly in to the purchase request. If the Google Pay data is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `google_pay` field of the transaction request is required.


        Pass-in Apple Pay: Pass an Apple Pay payment method directly in to the purchase request. If the Apple Pay data is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `apple_pay` field of the transaction request is required.
      tags: [gateways, transactions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  allOf:
                    - $ref: '#/components/schemas/purchase_transaction_request'
                    - type: object
                      properties:
                        payment_method_token:
                          description: The token of the payment method to use. Required if the purchase uses a tokenized payment method.
                        credit_card:
                          $ref: '#/components/schemas/pass_in_credit_card'
                        bank_account:
                          $ref: '#/components/schemas/pass_in_bank_account'
                        android_pay:
                          $ref: '#/components/schemas/pass_in_android_pay'
                        google_pay:
                          $ref: '#/components/schemas/pass_in_google_pay'
                        apple_pay:
                          $ref: '#/components/schemas/pass_in_apple_pay'
      responses:
        '200':
          $ref: '#/components/responses/transaction'

  /transactions/{transaction_token}/purchase.json:
    parameters:
      - $ref: '#/components/parameters/transaction_token'
    post:
      operationId: transactions.purchase
      summary: Reference purchase
      description: Execute a purchase using the payment method [utilized in a previous transaction](https://docs.spreedly.com/guides/using-payment-methods/#reference-purchases).
      tags: [gateways, transactions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  $ref: '#/components/schemas/purchase_transaction_request'
      responses:
        '200':
          $ref: '#/components/responses/transaction'

  /gateways/{gateway_token}/authorize.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    post:
      operationId: gateways.authorize
      summary: Authorize
      description: |
        Authorize a payment method to be charged a specific amount at the target gateway. No funds are taken with an authorize – a follow-up [capture](https://docs.spreedly.com/reference/api/v1/?json#capture) transaction is required to actually move the funds.

        The referenced gateway must exist in the environment whose environment key is being used to authenticate the API call.


        Tokenized payment method: Authorize a _tokenized_ payment method (already stored in the Spreedly environment) to be charged a specific amount.

        The `payment_method_token` field of the transaction request is required.


        Pass-in credit card: Pass a credit card payment method directly in to the authorize request. If the card is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `credit_card` field of the transaction request is required.


        Pass-in Android Pay: Pass an Android Pay payment method directly in to the authorize request. If the Android Pay data is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `android_pay` field of the transaction request is required.


        Pass-in Google Pay: Pass a Google Pay payment method directly in to the authorize request. If the Google Pay data is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `google_pay` field of the transaction request is required.


        Pass-in Apple Pay: Pass an Apple Pay payment method directly in to the authorize request. If the Apple Pay data is valid, it will automatically be tokenized at Spreedly before sending to the gateway.

        The `apple_pay` field of the transaction request is required.
      tags: [gateways, transactions]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  allOf:
                    - $ref: '#/components/schemas/purchase_transaction_request'
                    - type: object
                      properties:
                        payment_method_token:
                          description: The token of the payment method to use. Required if the authorization uses a tokenized payment method.
                        credit_card:
                          $ref: '#/components/schemas/pass_in_credit_card'
                        android_pay:
                          $ref: '#/components/schemas/pass_in_android_pay'
                        google_pay:
                          $ref: '#/components/schemas/pass_in_google_pay'
                        apple_pay:
                          $ref: '#/components/schemas/pass_in_apple_pay'
      responses:
        '200':
          $ref: '#/components/responses/transaction'

  /transactions/{transaction_token}/capture.json:
    parameters:
      - $ref: '#/components/parameters/transaction_token'
    post:
      operationId: transactions.capture
      summary: Capture
      description: |
        Full amount: Capture all funds previously reserved via an [authorize](https://docs.spreedly.com/reference/api/v1/?json#authorize).

        The request body may be omitted, or the `amount` field may be omitted from the request transaction.

        Partial amount: Capture a partial amount from an [authorize](https://docs.spreedly.com/reference/api/v1/?json#authorize) by specifying an `amount`.

        The request body must be present.
      tags: [transactions]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: object
                  properties:
                    amount:
                      description: The amount to capture, as an integer. E.g., `1000` for $10.00. If not provided, the full amount of the original authorize will be captured.
                    currency_code:
                      description: The currency of the funds, as [ISO 4217 alpha currency codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes), e.g., `USD` for US dollars.
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /transactions/{transaction_token}/void.json:
    parameters:
      - $ref: '#/components/parameters/transaction_token'
    post:
      operationId: transactions.void
      summary: Void
      description: |
        Cancel an `authorization` transaction.

        This API call can also be used to cancel a `capture`/`purchase` transaction that hasn’t yet settled at the merchant account.
      tags: [transactions]
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /transactions/{transaction_token}/credit.json:
    parameters:
      - $ref: '#/components/parameters/transaction_token'
    post:
      operationId: transactions.credit
      summary: Credit (refund)
      description: |
        Full amount: Refund the full amount of a purchase.

        The request body may be omitted, or the `amount` field may be omitted from the request transaction.

        Partial amount: Refund a partial amount of a purchase by specifying an `amount`.

        The request body must be present.
      tags: [transactions]
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: object
                  properties:
                    amount:
                      description: The amount to refund, as an integer. E.g., `1000` for $10.00. If not provided, the full amount of the original purchase will be refunded.
                    currency_code:
                      description: The currency of the funds, as [ISO 4217 alpha currency codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes), e.g., `USD` for US dollars.
      responses:
        '200':
          $ref: '#/components/responses/transaction'

  /gateways/{gateway_token}/general_credit.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    post:
      operationId: gateways.general_credit
      summary: General credit
      description: |
        Add funds to a credit card outside the scope of a previous reference transaction. This is different from [credit](https://docs.spreedly.com/reference/api/v1/?json#credit) which refunds money only up to the amount that had been taken during a previous transaction.

        Support for this general credit depends on the gateway.
      tags: [gateways]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transaction:
                  type: object
                  required:
                    - payment_method_token
                    - amount
                    - currency_code
                  properties:
                    payment_method_token:
                      description: The token of the payment method to use
                    amount:
                      description: The amount to request, as an integer. E.g., `1000` for $10.00.
                    currency_code:
                      description: The currency of the funds, as [ISO 4217 alpha currency codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes), e.g., `USD` for US dollars.
                    order_id:
                      description: The merchant specified order id. If not provided, the Spreedly transaction token will be used.
                    description:
                      description: A human readable description of the transaction which will be passed to the gateway if it’s supported
                    continue_caching:
                      description: A boolean option to keep the cvv cached for a few minutes. Otherwise cvv is deleted immediately.
                    ip:
                      description: The IP address of the end-user customer
                    email:
                      description: Override the customer email address associated with the payment method for this transaction
      responses:
        '200':
          $ref: '#/components/responses/transaction'

  /gateways/{gateway_token}/verify.json:
    parameters:
      - $ref: '#/components/parameters/gateway_token'
    post:
      operationId: gateways.verify
      summary: Verify
      description: Determine if a credit card is [chargeable card and available for purchases](https://docs.spreedly.com/guides/using-payment-methods/#verifying-a-card). The `retain_on_success` request parameter will automatically retain the card if it’s successfully verified.
      tags: [gateways]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_token
              properties:
                transaction:
                  properties:
                    payment_method_token:
                      description: The token of the payment method to verify
                    retain_on_success:
                      description: If the card is verified, retain it so it can be used for future transactions
                    currency_code:
                      description: The currency of the funds, as [ISO 4217 alpha currency codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes), e.g., `USD` for US dollars.
                    ip:
                      description: If the gateway requires a whitelisted IP address
      responses:
        '200':
          $ref: '#/components/responses/transaction'

  /receivers/{receiver_token}/deliver.json:
    parameters:
      - $ref: '#/components/parameters/receiver_token'
    post:
      operationId: receivers.deliver
      summary: Deliver
      description: Deliver a payment method to the specified receiver endpoint. See the guide on [payment method distribution](https://docs.spreedly.com/guides/payment-method-distribution/) to understand how to specify what is sent to the receiver.
      tags: [receivers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_token
                - url
                - body
              properties:
                delivery:
                  properties:
                    continue_caching:
                      description: "An option to keep the cvv cached for a few minutes. Otherwise cvv is deleted immediately."
                    payment_method_token:
                      description: "The token of the payment method to send to the receiver and whose values will be applied to the delivery template"
                    url:
                      description: "The fully qualified URL to send the payment method. The URL must have the same hostname as one of the whitelisted hostnames for the target receiver. The URL string can include distribution variable placeholders, e.g., `https://prod.receiver.com/path/book?user={{ user_name }}`."
                    request_method:
                      description: "An option to specify the HTTP method to use when contacting the receiver. Acceptable values are `PUT` and `POST`. If omitted, the default value is `POST`."
                      default: POST
                    headers:
                      description: "The request headers to be sent to the receiver as a [colon-delimited, new-line separated, string](http://en.wikipedia.org/wiki/List_of_HTTP_header_fields#General_format). `Host` and `Content-Length` can be omitted as they are automatically generated by Spreedly. Headers can include distribution variable placeholders, e.g., `User: {{ user_name }}`."
                    body:
                      description: "The request body that will get sent to the receiver. Headers can include distribution variable placeholders, e.g., `<cardNumber>{{ credit_card_number }}</cardNumber>`."
                    encode_response:
                      description: "If `true`, the `response_body` value in the delivery transaction response will be base64 encoded. This is useful if there are characters in the response known to cause encoding or other formatting issues."
                      default: false
      responses:
        '200':
          $ref: '#/components/responses/transaction'
  /receivers/{receiver_token}/export.json:
    parameters:
      - $ref: '#/components/parameters/receiver_token'
    post:
      operationId: receivers.export
      summary: Export
      description: Export multiple payment methods in a single, asynchronous, batch call to an SFTP receiver endpoint.
      tags: [receivers]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - payment_method_tokens
                - url
                - body
              properties:
                delivery:
                  properties:
                    payment_method_tokens:
                      description: An array of payment method tokens to include in the export.
                      type: array
                      items: {}
                    payment_method_data:
                      description: |
                        A hash of key/value pairs. For each pair, the key is a payment_method_token and the value is a hash of information specific to the associated payment method. This payment method specific information is made available to the request template at time of export.

                        To associate card-specific properties (not exposed as template variables), use the `payment_method_data` property to specify variables tied to specific payment method tokens.
                      type: object
                      additionalProperties:
                        type: object
                      example:
                        "56wyNnSmuA6CWYP7w0MiYCVIbW6":
                          "order_id": "1234"
                        "TtSvidJm3e4Lmza4l8Je5Bwuqmf":
                          "order_id": "5678"
                    url:
                      description: The fully qualified URL for the SFTP server. The URL must have the same hostname as one of the whitelisted hostnames for the target receiver. The path of the url will be used as the file name, e.g., `sftp://prod.receiver.com/path/to/file.txt`.
                    body:
                      description: |
                        The request body that will get sent to the receiver e.g.,
                        ```
                        {{#payment_methods}}
                        <cardNumber>{{ credit_card_number }}</cardNumber>
                        {{/payment_methods}}
                        ```
                    callback_url:
                      description: The url where Spreedly will attempt delivery of transaction results. Transaction results are posted in JSON format.
      responses:
        '200':
          $ref: '#/components/responses/transaction'

components:
  securitySchemes:
    http_basic:
      type: http
      scheme: basic
      description: |
        Unless otherwise noted, all calls to the Spreedly API use [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) over HTTPS.

        Use the [environment key](https://docs.spreedly.com/basics/credentials/#environment-key) of the Spreedly environment you wish to execute against as the HTTP basic user, and one of your organization’s [access secrets](https://docs.spreedly.com/basics/credentials/#access-secret) as the HTTP basic password.
  parameters:
    gateway_token:
      name: gateway_token
      description: The token of the gateway to execute against
      in: path
      required: true
      schema:
        type: string
    receiver_token:
      name: receiver_token
      description: The token of the receiver at Spreedly
      in: path
      required: true
      schema:
        type: string
    payment_method_token:
      name: payment_method_token
      description: The token of the payment_method at Spreedly
      in: path
      required: true
      schema:
        type: string
    certificate_token:
      name: certificate_token
      description: A unique string generated by Spreedly to identify a certificate
      in: path
      required: true
      schema: {type: string}
    transaction_token:
      name: transaction_token
      description: The token identifying this transaction at Spreedly
      in: path
      required: true
      schema: {type: string}
    order:
      name: order
      description: The order of the returned list. Default is `asc`, which returns the oldest records first. To list newer records first, use `desc`.
      in: query
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
    since_token:
      name: since_token
      description: The token of the item to start from (e.g., the last token received in the previous list if iterating through records)
      in: query
      required: false
      schema:
        type: string
  responses:
    errors:
      description: Errors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errors'
    transaction:
      description: Transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/transaction_wrapper'

  schemas:
    errors:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - key
              - message
            properties:
              key:
                type: string
              message:
                type: string
    transaction_wrapper:
      type: object
      required:
        - transaction
      properties:
        transaction:
          $ref: '#/components/schemas/transaction'
    transaction:
      type: object
      description: Every action performed against the Spreedly API is captured as a transaction. Transactions can represent local actions, such as storing a payment method, or an external action, such as performing a purchase against a gateway.
      properties:
        token:
          type: string
          description: The token uniquely identifying this transaction at Spreedly
        created_at: {}
        updated_at: {}
        succeeded:
          # TODO: unify
          anyOf:
            - description: "`true` if the transaction request was successfully executed, `false` otherwise"
              type: boolean
            - description: Shows if the transaction completed with a non error status. While the transaction is pending, this value will be false.
              type: boolean
        transaction_type:
          description: The type of transaction, e.g., `Authorization`, `Capture`, `Credit`
        retained:
          type: boolean
          description: if the payment method was set to be automatically retained on creation
        state:
          description: The state of this transaction. The state will be “pending” until the transaction has completed processing. Once processed, the state can be either “succeeded” or “failed”
        message_key: {}
        message:
          # TODO: unify
          anyOf:
            - description: A human-readable string indicating the result of the transaction
              type: string
            - description: A brief description of the results of the transaction
              type: string
        gateway_transaction_id:
          description: The id of the transaction _at the gateway_. To be used when corresponding with the gateway or reconciling transactions.
        retain_on_success:
          description: If the payment method was set to be retained on successful completion of the transaction. To determine if the payment method was actually retained, see the `payment_method/storage_state` field.
        payment_method_added:
          description: If the payment method was added as part of this transaction (i.e. a direct pass-in of the payment information) vs. using an already tokenized payment method
        on_test_gateway: {}
        response:
          # TODO: unify
          anyOf:
            - description: Unmodified details of the gateway response, including the `message` and `error_code`, if applicable. For failed transactions these fields can help determine the root cause.
            - description: The raw response status, header and body returned from the receiver. Parse these values to retrieve relevant response fields.
              type: object
              properties:
                status:
                  description: The status code returned by the receiver.
                headers:
                  description: The headers, as delivered exactly to the receiver.
                body:
                  description: The raw body delivered to the receiver, with account numbers and other personal information redacted.
            - description: The response status returned from the receiver. The response is `null` while the transaction is pending.
              type: object
              properties:
                status: {}
        payment_methods_submitted:
          description: The payment method tokens in the original export request
        payment_methods_included:
          description: The payment method tokens included in the export to the receiver. This value is `null` while the transaction is pending. Once the transaction is processed, this value will be an array of payment method tokens.
        payment_methods_excluded:
          description: The payment methods that were not included in the export to the receiver. The value is `null` while the transaction is pending. Once the transaction is processed, this value will be a hash with key/value pairs. The keys are payment method tokens, the values are the reason the payment method was not included in the export to the receiver.
        gateway:
          $ref: '#/components/schemas/gateway'
        receiver:
          $ref: '#/components/schemas/receiver'
        payment_method:
          $ref: '#/components/schemas/payment_method'
        basis_payment_method:
          #description: The payment method _vaulted at Spreedly_ that was copied to the gateway as part of this transaction
          $ref: '#/components/schemas/payment_method'
    gateway:
      type: object
      properties:
        token:
          description: The token identifying the provisioned gateway at Spreedly
          type: string
        name:
          description: The human readable name of the gateway
          type: string
        gateway_type:
          description: The type (short name) of the gateway. Use this value when provisioning a gateway.
          type: string
        state:
          description: The storage state of the gateway (retained, redacted, etc…)
          type: string
        redacted:
          description: If this gateway is redacted or not
          type: boolean
        credentials:
          description: The non-sensitive credentials used for this gateway
          type: array
          items: {}
        characteristics:
          description: A list of operations (such as purchase, capture etc…) that the gateway supports
          type: array
          items:
            type: string
        payment_methods:
          description: A list of payment methods (such as credit_card, apple_pay, google_pay, etc…) that the gateway supports
          type: array
          items:
            type: string
        gateway_specific_fields:
          description: The list of gateway specific fields that can be specified in supported gateway transactions
          type: array
          items:
            type: string
    gateway_update_request:
      type: object
      properties:
        gateway:
          type: object
          properties:
            gateway_type:
              description: The type of gateway, e.g., `test` for a [test gateway](https://docs.spreedly.com/payment-gateways/test/) or `stripe`, `braintree`, etc…. You can find the list of supported gateways and their respective gateway types [on this page](https://docs.spreedly.com/reference/supported-gateways/)
              type: string
            description:
              description: A description of the gateway. Useful to differentiate between multiple gateways of the same type provisioned within your system.
          required: [gateway_type]
          additionalProperties:
            description: "gateway specific credential field(s): The merchant credentials required for this type of gateway. Stripe has `login`, but your gateway type will most likely require a different set of credentials. Please reference the [gateway’s documentation](https://docs.spreedly.com/reference/supported-gateways/) to determine the appropriate credential(s) to pass here."
    receiver_option:
      type: object
      properties:
        name:
          description: The human readable name of the receiver
        receiver_type:
          description: The type (short name) of the receiver. Use this value when provisioning a receiver.
        hostnames:
          description: The urls used to interact with the receiver
        company_name:
          description: The name of the company providing the receiver
    receiver_create_request:
      type: object
      properties:
        receiver:
          type: object
          properties:
            receiver_type:
              description: The type of receiver to provision. Can be `test` for a test receiver, or any one of the other supported production receiver types.
            hostnames:
              description: "Whitelist of hosts that receiver can send payments to. Supports a comma seperated list of hostnames if multiple are required. Hostnames should include the protocol and domain, but not the path, e.g., `http://testing.receiver.com`. Production receivers can omit hostnames as their values are hard-coded. Note: only required for `test` receivers"
              example: "sftp://testing.receiver.com"
            credentials:
              $ref: '#/components/schemas/receiver_credentials'
            protocol:
              description: "a hash of protocol values, currently only used for the SFTP protocol. e.g. `sftp://user:password@127.0.0.0`. Note: required for SFTP receivers"
              type: object
              properties:
                user:
                  description: The user value.
                password:
                  description: The password value.
          required:
            - receiver_type
    receiver_credentials:
      description: Sensitive values that should be securely stored and made available to the request template at time of delivery
      type: object
      properties:
        name:
          description: The name of the credential. This will be the name of the variable in the delivery request template.
        value:
          description: The value of the credential. This will be the value substituted in for the credential variable in the delivery request template.
        safe:
          description: Set to `true` if the credential is not a sensitive value (e.g., a user name). Otherwise it is assumed to be a sensitive value and will not echoed back in API responses.
          type: boolean
          default: false
    receiver:
      type: object
      properties:
        company_name:
          description: The name of the company providing the receiver
        token:
          description: The token uniquely identifying this receiver at Spreedly
        receiver_type:
          description: The type of receiver
        hostnames:
          description: The whitelist of hostnames to which payment methods can be delivered
        state:
          description: The storage state of the payment method. Can be one of `retained` or `redacted`. By default, receivers are created in the `retained` state and must be explicitly redacted if they are no longer required.
          type: string
          enum:
            - retained
            - redacted
        credentials:
          description: One or more name/value pairs used to authenticate with the receiver. Only credentials marked as safe will have their values echoed.
        protocol_user:
          description: The user value used to authenticate with the SFTP receiver.
    payment_method:
      type: object
      properties:
        token:
          description: The token identifying the newly created payment method in the Spreedly vault
        created_at: {}
        updated_at: {}
        email: {}
        data: {}
        metadata:
          type: object
          additionalProperties: {}
        storage_state:
          description: The [storage state](https://docs.spreedly.com/reference/terminology/#storage-state) of the payment method
        redacted:
          description: If the payment method is now redacted
        test:
          description: "`true` if this payment method is a test payment method and cannot be used against real gateways or receivers"
        payment_method_type:
          description: The type of this payment method, e.g., `credit_card`, `bank_account`, `apple_pay`, `google_pay`, `third_party_token`, etc…
        errors:
          description: If the payment method is invalid (missing required fields, etc…), there will be associated error messages here
          type: array
          items: {}
        last_four_digits:
          description: The last four digits of the credit card number. This can be displayed to the user.
        first_six_digits:
          description: The first six digits of the credit card number. This can be displayed to the user.
        card_type:
          type: string
          example: "visa"
        first_name: {}
        last_name: {}
        full_name: {}
        address1: {}
        address2: {}
        city: {}
        state: {}
        zip: {}
        country: {}
        phone_number: {}
        company: {}
        shipping_address1: {}
        shipping_address2: {}
        shipping_city: {}
        shipping_state: {}
        shipping_zip: {}
        shipping_country: {}
        shipping_phone_number: {}
        verification_value:
          description: The obscured verification value (CVV), e.g., XXX or XXXX
        number:
          description: The obscured credit card number, e.g., XXXX-XXXX-XXXX-4444
        month:
          description: The expiration month
        year:
          description: The expiration year
        account_type:
          description: The type of account. Can be one of `checking` or `savings`.
          enum:
            - checking
            - savings
        account_holder_type:
          description: The account holder type. Can be one `business` or `personal`.
          enum:
            - business
            - personal
        routing_number_display_digits:
          description: The obscured (first three digits) routing number. This value can be displayed to users.
        account_number_display_digits:
          description: The obscured (last four digits) account number. This value can be displayed to users.
        third_party_token:
          description: The token identifying the payment method at the external gateway
        gateway_type:
          description: The type of the external gateway at which the target payment method is stored
    pass_in_credit_card:
      type: object
      required:
        - number
        - month
        - year
      properties:
        first_name:
          description: The first name of the cardholder
        last_name:
          description: The last name of the cardholder
        number:
          description: The full card number
        verification_value:
          description: The verification value (CVV/CVC) of the card
        month:
          description: The expiration month of the card
        year:
          description: The expiration year of the card
        full_name:
          description: "The full name of the cardholder. If provided, will be parsed to determine `first_name` and `last_name`. Note: either `full_name` or both `first_name` and `last_name` are required"
      example:
        "first_name": "Joe"
        "last_name": "Jones"
        "number": "5555555555554444"
        "verification_value": "423"
        "month": "3"
        "year": "2032"
    pass_in_bank_account:
      type: object
      required:
        - bank_routing_number
        - required
      properties:
        first_name:
          description: "The first name of the account owner"
        last_name:
          description: "The last name of the account owner"
        bank_routing_number:
          description: "The account routing number"
        bank_account_number:
          description: "The account number"
        bank_account_type:
          description: "The type of account. Can be one of `checking` or `savings`."
          enum:
            - checking
            - savings
        bank_account_holder_type:
          description: "The account holder type. Can be one `business` or `personal`."
          enum:
            - business
            - personal
        full_name:
          description: "The full name of the account owner. If provided, will be parsed to determine first_name and last_name. Note: optional: either full_name or both first_name and last_name are required"
    pass_in_android_pay:
      type: object
      required:
        - payment_data
      properties:
        payment_data:
          description: The JSON-formatted encrypted payload [Android Pay Payment Token](https://developers.google.com/android-pay/integration/payment-token-cryptography#retrieving-the-encrypted-payload)
          type: object
          properties:
            encryptedMessage: {}
            ephemeralPublicKey: {}
            tag: {}
          example:
            "encryptedMessage": "V65NNwqzK0A1bi0F96HQZr4eFA8fWCatwykv3sFA8Cg4Wn4Ylk/szN6GiFTuYQFrHA7a/h0P3tfEQd09bor6pRqrM8/Bt12R0SHKtnQxbYxTjpMr/7C3Um79n0jseaPlK8+CHXljbYifwGB+cEFh/smP8IO1iw3TL/192HesutfVMKm9zpo5mLNzQ2GMU4JWUGIgrzsew6S6XshelrjE"
            "ephemeralPublicKey": "BB9cOXHgf3KcY8dbsU6fhzqTJm3JFvzD+8wcWg0W9r+Xl5gYjoZRxHuYocAx3g82v2o0Le1E2w4sDDl5w3C0lmY="
            "tag": "boJLmOxDduTV5a34CO2IRbgxUjZ9WmfzxNl1lWqQ+Z0="
        certificate_token:
          description: The token identifying the [Certificate](https://docs.spreedly.com/reference/api/v1/?json#certificates) used by the native Android Pay app to encrypt the payment data (the certificate must exist within the same Spreedly environment as this new payment method).
        transaction_id:
          description: The [Google Transaction ID](https://codelabs.developers.google.com/codelabs/android-pay/index.html#10) (required for some gateways, such as Braintree)
        test_card_number:
          description: Android Pay does not provide a way to create a test payment token. To mark this as a test Android Pay payment method, specify a [test card number](https://docs.spreedly.com/reference/test-data/#credit-cards) in this field. Doing so will prevent this payment method from being used against a production gateway, while still verifying the submitted Android Pay payment data.
    pass_in_google_pay:
      type: object
      required:
        - payment_data
      properties:
        payment_data:
          description: The JSON serialized [paymentData](https://developers.google.com/pay/api/web/guides/resources/payment-data-cryptography#payment-method-token-structure)
          type: object
          properties:
            signature:
              description: Verifies that the message came from Google. Base64-encoded. Created using ECDSA.
              type: string
            protocolVersion:
              description: Identifies the encryption/signing scheme under which the message was created. Allows the protocol to evolve over time, if needed. If it's not set, assume `ECv0`.
              type: string
            signedMessage:
              description: A serialized JSON string containing the `encryptedMessage`, `ephemeralPublicKey` and `tag`. Serialized to simplify the signature verification process.
              type: string
          example:
            "signature": "MEUCIA6SGVRwhOyeYRkeDUUNwB/kGtyfQAlOsg7NZydT17u/AiEA48BhWGQEF1EbEU0J+m8eSK3rTfhok9QqpiFVbME+Ky0="
            "protocolVersion": "ECv1"
            "signedMessage": "{\"encryptedMessage\":\"3v4IcT/eovIDP2WF8iRUy4qWQnE9Cx0vQxIZ5f9i3Emv3Tzs1AzvB7cxXhxrjp9FVIzdOwsZAPAsm03gvoYq8Xdr70XvrVRd2MFwQhMC7IV/uEsthw4JsR8oCkbI5v/zqhu2B+JodFgavNliHcpKBgijy2D6bpx7jXEkM39M/L4oBObFxFrhVSLA1GjOV6A5gLAXNXt0ffkCYekihqAyJrWlk3sCBDCF5SUiAKEIOIZtzZLgusxjVp6ufZHOHm/53uhAi6JWSJ1E6G5aaYGtULYdwgURHtxN5OIzQPYlEGctaQd5tgfCsBFfGkYyN1GRNgclbaLzAfk/Jn7/6IVKuV0ol3xubTcnjGTZXwtTjiEyYDoz1yVqB9ViMmJa55L6nBtbbAkcNEgAi7dPnrbvBGEP7QWsNT9D71g8SWrlRTCYUAOyuamaQhofG4ul1IVjmltdAy2BHBWpqgJnR9kczydQyE7uDiqhSC1/0eG8GCGIqoi8XfOioGXfMyLZ1p2ZcNK9ECjzUrH/edrwgtShxgWuWMwQTM4DQlVTAA/R4DVs192YWZcc7jm5wLqZ0+XEaPuighJM1Ps1Egeccg\\u003d\\u003d\",\"ephemeralPublicKey\":\"BA2SvF9BdCX7Tl1wwRkyLzTfqhctobhZgSugC9Cz77XNUCBOBMfFyJQt506PUs89D6IJZZfOkZopy0shRF9Uph4\\u003d\",\"tag\":\"Uhin1BE7KAuuiam7eEQFimRUDd9Xn6tZc2fClTpfrXQ\\u003d\"}"
        test_card_number:
          description: Specify a [test card number](https://docs.spreedly.com/reference/test-data/#credit-cards) in this field. Doing so will prevent this payment method from being used against a production gateway, while still verifying the submitted Google Pay payment data.
        first_name:
          description: The first name of the cardholder
        last_name:
          description: The last name of the cardholder
        address_1:
          description: Cardholder’s address, line 1
        address_2:
          description: Cardholder’s address, line 2
        city:
          description: Cardholder’s city
        state:
          description: Cardholder’s state
        zip:
          description: Cardholder’s zip
        country:
          description: Cardholder’s country
    pass_in_apple_pay:
      type: object
      required:
        - payment_data
      properties:
        payment_data:
          description: The JSON serialized [`paymentData` property of an Apple Pay PKPaymentToken](https://developer.apple.com/library/ios/documentation/PassKit/Reference/PaymentTokenJSON/PaymentTokenJSON.html#//apple_ref/doc/uid/TP40014929-CH8-SW2)
          type: object
          properties:
            version: {}
            data: {}
            signature: {}
            header:
              type: object
              properties:
                ephemeralPublicKey: {}
                transactionId: {}
                publicKeyHash: {}
              example:
                "ephemeralPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEQwjaSlnZ3EXpwKfWAd2e1VnbS6vmioMyF6bNcq/Qd65NLQsjrPatzHWbJzG7v5vJtAyrf6WhoNx3C1VchQxYuw=="
                "transactionId": "e220cc1504ec15835a375e9e8659e27dcbc1abe1f959a179d8308dd8211c9371"
                "publicKeyHash": "/4UKqrtx7AmlRvLatYt9LDt64IYo+G9eaqqS6LFOAdI="
        test_card_number:
          description: Apple Pay does not provide a way to create a test payment token. To mark this as a test Apple Pay payment method, specify a [test card number](https://docs.spreedly.com/reference/test-data/#credit-cards) in this field. Doing so will prevent this payment method from being used against a production gateway, while still verifying the submitted Apple Pay payment data.
    purchase_transaction_request:
      type: object
      required:
        - amount
        - currency_code
      properties:
        amount:
          description: The amount to request, as an integer. E.g., `1000` for $10.00.
          type: integer
        currency_code:
          description: The currency of the funds, as [ISO 4217 alpha currency codes](https://en.wikipedia.org/wiki/ISO_4217#Active_codes), e.g., `USD` for US dollars.
        order_id:
          description: The merchant specified order id. If not provided, the Spreedly transaction token will be used.
        description:
          description: A human readable description of the transaction which will be passed to the gateway if it’s supported
        retain_on_success:
          description: If the card is verified, retain it so it can be used for future transactions
        ip:
          description: The IP address of the end-user customer
        email:
          description: Override the customer email address associated with the payment method for this transaction
        shipping_address:
          description: Override the customer shipping address associated with the payment method for this transaction
          type: object
          properties:
            name:
              description: Customer’s name in the shipping address
            address1:
              description: Customer’s shipping address, line 1
            address2:
              description: Customer’s shipping address, line 2
            city:
              description: Customer’s shipping city
            state:
              description: Customer’s shipping state/province
            zip:
              description: Customer’s shipping zip
            country:
              description: Customer’s shipping country
            phone:
              description: Customer’s shipping phone
        allow_blank_name:
          description: "`true` if this payment method should skip the name validation requirement"
          type: boolean
        allow_expired_date:
          description: "`true` if this payment method should skip the expired date validation requirement"
          type: boolean
        allow_blank_date:
          description: "`true` if this payment method should skip the expiration date validation requirement"
          type: boolean
    certificate:
      type: object
      properties:
        token: {}
        created_at: {}
        updated_at: {}
        algorithm:
          description: The encryption algorithm used to create the key pair
        cn:
          description: The certificate common name
        o:
          description: The organization
        ou:
          description: The organization unit
        c:
          description: The country
        st:
          description: The state
        l:
          description: The locality or city
        email_address:
          description: The email address
        public_key:
          description: PEM-formatted public key of the certificate
        public_key_hash:
          description: The base64 encoded, SHA256 hash, of the public key
        csr:
          description: PEM formatted certificate signing request (CSR)
        pem:
          description: |
            The signed certificate in PEM format, if it has been set on this certificate. This value will be empty on creation.

            Spreedly is not a certificate authority and, thusly, will not sign the certificate for you. It is your responsibility to take the CSR to your certificate authority (or self-sign the cert), and then update the certificate record with the signed cert in PEM format.
